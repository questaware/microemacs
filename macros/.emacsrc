; 2 handle-tab

15 store-macro
  insert-string "F	"
!endm

btk execute-macro-15 A-Q


set $discmd 0
set $sscroll TRUE
set $col1ch 1
set $col2ch 8
set $palette 71727374757670
;set $pagelen 74

set $sterm ~n

add-global-mode re
add-global-mode AbC
;add-global-mode blue
add-global-mode BLACK
;add-mode blue
add-mode BLACK


1 store-macro		; change case one character
  set %ccc $curchar
  !if &gre %ccc 96 
    set $curchar &sub %ccc 32
  !else
    !if &and &gre %ccc 64 &les %ccc 91
        set $curchar &add %ccc 32
    !endif
  !endif
  forward-character
!endm    

btk execute-macro-1 

2 store-macro		; quit buffer
  set %disc $discmd
  set $discmd FALSE
  set %mybuf $cbufname
  set $status 0
  !if &not %goon
    !force last-buffer
  !endif
  !if &not $status
    !force next-buffer
  !endif
  !if &or &not $status &seq $cbufname %mybuf
    !force exit-emacs
  !endif
  !force delete-buffer %mybuf
  !if &not $status
    !force select-buffer %mybuf
  !endif
  !force delete-window
  set $discmd %disc
!endm

btk execute-macro-2 M-\
btk execute-macro-2 M-`

3 store-macro		; save, quit buffer
  save-file
  execute-macro-2
!endm

btk execute-macro-3 M-/

4 store-macro		; new file
  set %fle @&cat &cat "new file [" $cfname "]: "
  !if &equ 0 &length %fle
     set %ln $curline
     read-file $cfname
     goto-line %ln
  !else
     set %bnm $cbufname
     find-file %fle
     !if &not &seq %bnm $cbufname
       delete-buffer %bnm
     !endif
  !endif
!endm

btk execute-macro-4 ^X

5 store-macro		; search in the last direction
  !if &gre $lastdir 0
    hunt-forward
  !else
    hunt-backward
  !endif  
!endm  

btk execute-macro-5 FN1
btk execute-macro-5 ^N

6 store-macro		; toggle msb one character
  set $curchar &bxor $curchar 128
  forward-character
!endm    

btk execute-macro-6 ^^

7 store-macro  		; toggle insert/overstrike
  set $cmode &bxor $cmode 32
!endm

btk execute-macro-7 FN4

8 store-macro		; copy previous line 
  set %ca &dit
  insert-string %ca
!endm  

btk execute-macro-8 FN^C
btk execute-macro-8 ^_
btk execute-macro-8 ^Z
btk word-search M-Z

9 store-macro		; copy line
  beginning-of-line
  set-mark
1 next-line
  copy-region
  set $discmd FALSE
  remove-mark
  set $discmd TRUE
!endm

btk execute-macro-9 ^C 
btk execute-macro-9 A-C

10 store-macro 		; do line
; set %oo @&cat "key " $lastkey
  !if &equ $lastkey 50
    next-line
  !endif
  execute-macro
;  !if &gre $cwline 20
;    3 move-window-down
;  !endif
!endm

btk execute-macro-10 FN2
btk execute-macro-10 FN^2

11 store-macro		; kill line
  beginning-of-line
  1 kill-to-end-of-line 
!endm

btk execute-macro-11 ^D

12 store-macro		; get word
  kill-kill
  set-mark
  next-word
  copy-region
  backward-word
!endm

btk execute-macro-12 M-W

13 store-macro         ; expand macros
  !if &equ $uarg 0
    execute-file error.rc
  !else
    execute-file diffs.rc
  !endif  
!endm

btk execute-macro-13 M-I

14 store-macro	 	; yank, clear kill buffer
  yank
  kill-kill
!endm

btk execute-macro-14 FNC
btk yank M-FNC

16 store-macro		; eow, bol or bof
; set %oo @&cat "key " $lastkey
  !if &equ  $lastkey 60
    beginning-of-line
  !else
    set-mark
    next-word
    0 backward-word
    !if &equ $uarg 0
      copy-region
    !else
      kill-region
    !endif
  !endif
!endm

btk execute-macro-16 FN<
btk execute-macro-16 M-FND

;btk end-of-line FN>

17 store-macro
   insert-string "{ "
   newline-and-indent
   insert-string "}"
   backward-line
   end-of-line
!endm

btk execute-macro-17 M-^]

btk beginning-of-file M-FNZ
btk end-of-file M-FNV
btk beginning-of-file A-M-^Z
btk end-of-file A-M-(

btk beginning-of-line FN9
btk backward-word FN0
btk next-word FN:
btk end-of-line FN;

btk forward-character ^L

btk clear-and-redraw M-^[

18 store-macro       ; 
   set %fw 1
	 !if &equ $lastkey 66
		 set %fw 0
	 !endif
;  set %oo @&cat "key " $lastkey
   !if &equ $lastkey 54
     search-reverse "^{"
   !else		 	; search up/down for first word of a
    !if &equ $lastkey 53
       set-mark
       next-word
       copy-region
    !else
       !if &equ $keycount 1	; sequence of keystrokes
         search-forward "[A-Za-z0-9_][A-Za-z0-9_]*"
         set %mtch $match
       !endif
;			 set %oo @&cat "key " $lastkey
			 !if &equ %fw 0
;          set %oo @&cat "sr" %mtch
           search-reverse %mtch
       !else
         2 search-forward %mtch
       !endif
    !endif
   !endif
!endm

btk execute-macro-18 FN6
btk execute-macro-18 FN^P
btk execute-macro-18 FN^N
btk execute-macro-18 A-B
btk execute-macro-18 A-F
btk execute-macro-18 A-5

btk next-window 

19 store-macro ; do-os-cmd
       set %lk $lastkey
       !if &equ $keycount 1	; sequence of keystrokes
         search-forward "[A-Za-z0-9_][A-Za-z0-9_]*"
         set %mtch $match
       !endif
       !if &equ %lk 66 
           search-reverse %mtch
       !else
         2 search-forward %mtch
       !endif
!endm
; &equ $lastkey 1234 &equ $lastkey 18498 &equ $lastkey 141

btk execute-macro-19 M-FNB
btk execute-macro-19 M-FNF

btk search-forward A-S
btk save-file ^XA-S

btk select-buffer ^XB
btk next-buffer M-FN;
btk last-buffer M-FN9
btk move-window-up   A-P
btk move-window-down A-N
btk move-window-up   M-FNP
btk next-window      M-FNN
btk find-tag M-FN>

btk help A-1               ; SNA like
btk split-current-window A-2
btk exit-emacs A-3
;A-4 A-5 not known
btk shell-command A-6
btk backward-page A-^Z
btk next-page A-(

btk search-incls M-FN<
btk pipe-command ^X'

set $discmd 1

set %istrl 64

set $hardtab 2
set $fileprof ".sql=4^.c=2.cpp=2"
